name: Build CLI

on:
  pull_request:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install protoc-gen-go and protoc-gen-go-grpc
        run: |
          go install github.com/bufbuild/buf/cmd/buf@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Generate protobuf
        run: |
          protoc --go_out=./api/pb --go_opt=paths=source_relative --go-grpc_out=./api/pb --go-grpc_opt=paths=source_relative api/proto/data_service.proto
          protoc --go_out=./api/pb --go_opt=paths=source_relative --go-grpc_out=./api/pb --go-grpc_opt=paths=source_relative api/proto/auth_service.proto

      - name: Build
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          BUILD_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)

          echo "VERSION=$VERSION"
          echo "BUILD_DATE=$BUILD_DATE"

          export GOOS=${{ matrix.goos }}
          export GOARCH=${{ matrix.goarch }}

          go build -o gault-$GOOS-$GOARCH \
            -ldflags "-X main.Version=$VERSION -X main.BuildDate=$BUILD_DATE" \
            ./cmd/client/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: gault-${{ matrix.goos }}-${{ matrix.goarch }}
