syntax = "proto3";

package api.proto.v1;

import "api/proto/validate/validate.proto";
import "third_party/google/api/annotations.proto";

option go_package = "api/proton/v1";

// gRPC-сервис для управления авторизации и регистрации
service AuthV1Service {
  // Login функция обработчик авторизации
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  // Registration функция обработчик регистрации
  rpc Registration(RegistrationRequest) returns (RegistrationResponse) {
    option (google.api.http) = {
      post: "/v1/auth/registration"
      body: "*"
    };
  };
}

// Запрос на авторизацию
message LoginRequest {
  string login = 1 [(validate.rules).string = {min_len: 3, max_len: 64, pattern: "^[a-zA-Z0-9_]+$"}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 128}];
}

// Ответ на авторизацию
message LoginResponse {
  string token = 1;
  string user_uid = 2;
}

// Запрос на регистрацию
message RegistrationRequest {
  string login = 1 [(validate.rules).string = {min_len: 3, max_len: 64, pattern: "^[a-zA-Z0-9_]+$"}];
  string password = 2 [(validate.rules).string = {min_len: 6, max_len: 128}];
}

// Ответ на регистрацию
message RegistrationResponse {
  string token = 1;
  string user_uid = 2;
}